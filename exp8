import java.util.Scanner;

public class NQueens {
    static void printBoard(int[][] board, int N) {
        for (int[] row : board) {
            for (int cell : row) System.out.print(cell == 1 ? "Q " : ". ");
            System.out.println();
        }
    }

    static boolean isSafe(int[][] board, int N, int row, int col) {
        for (int i = 0; i < row; i++) if (board[i][col] == 1) return false;
        for (int i = row - 1, j = col - 1; i >= 0 && j >= 0; i--, j--) if (board[i][j] == 1) return false;
        for (int i = row - 1, j = col + 1; i >= 0 && j < N; i--, j++) if (board[i][j] == 1) return false;
        return true;
    }

    static boolean solveNQueens(int[][] board, int N, int row) {
        if (row >= N) return true;
        for (int col = 0; col < N; col++) {
            if (isSafe(board, N, row, col)) {
                board[row][col] = 1;
                if (solveNQueens(board, N, row + 1)) return true;
                board[row][col] = 0;
            }
        }
  return false;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the value of N for the N-Queens problem: ");
        int N = scanner.nextInt();
        int[][] board = new int[N][N];

        if (solveNQueens(board, N, 0))
            printBoard(board, N);
        else
            System.out.println("No solution");

        scanner.close();
    }
}
